const id = "components/shadcn/obj-list-input.mdx";
						const collection = "docs";
						const slug = "components/shadcn/obj-list-input";
						const body = "\nCreate an input component for submitting an apendable list of objects using Shadcn/ui form components.\n\n## Demo\n\nimport { Image } from \"astro:assets\";\nimport objListDemo from \"@/assets/objListDemo.gif\";\n\n{/* ![Object list input component](/objListDemo.gif) */}\n\n<Image src={objListDemo} alt=\"Object list input component\" class={\"rounded\"} />\n\n## Prerequisites\n\n[Shadcn/ui](https://ui.shadcn.com/), [lucide-react](https://lucide.dev/), [zod](https://zod.dev/),\nand [react-hook-form](https://react-hook-form.com/) are required to use the code snippet below.\n\nMake sure you add the required components to your project:\n\n```bash showLineNumbers=false\nnpx shadcn-ui@latest add form input textarea button card scroll-area\n```\n\n## Code\n\n```tsx title=\"EducationForm.tsx\" collapse={1-18}\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useFieldArray, useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Button } from \"@/components/ui/button\";\nimport { Trash2Icon, CirclePlusIcon } from \"lucide-react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\n\n// Define the form schema\nconst formSchema = z.object({\n  education: z\n    .array(\n      z.object({\n        school: z.string(),\n        dates: z.string(),\n        description: z.string(),\n      })\n    )\n    .max(8),\n});\n\nfunction EducationForm() {\n  // Initialize the form with 1 empty field\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      education: [\n        {\n          school: \"\",\n          dates: \"\",\n          description: \"\",\n        },\n      ],\n    },\n  });\n\n  // Use the field array hook to manage the input fields\n  const eduFieldArr = useFieldArray({\n    control: form.control,\n    name: \"education\",\n  });\n\n  // Handle form submission\n  const onSubmit = (data: z.infer<typeof formSchema>) => {\n    console.log(data);\n  };\n\n  return (\n    <Form {...form}>\n      <h2 className=\"text-lg font-semibold\">Education</h2>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <ScrollArea className=\"h-[380px]\">\n          {eduFieldArr.fields.map((field, idx) => (\n            <Card\n              key={field.id}\n              id={field.id}\n              className=\"px-4 py-4 mb-2 space-y-2\"\n            >\n              <div className=\"flex gap-2\">\n                <FormField\n                  control={form.control}\n                  name={`education.${idx}.school`}\n                  render={({ field }) => (\n                    <FormItem className=\"flex-1\">\n                      <FormLabel>School</FormLabel>\n                      <FormControl>\n                        <Input\n                          className=\"mt-0\"\n                          placeholder=\"National University of Singapore\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name={`education.${idx}.dates`}\n                  render={({ field }) => (\n                    <FormItem className=\"flex-1\">\n                      <FormLabel>Dates</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Jan 2020 - Dec 2021\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n              <FormField\n                control={form.control}\n                name={`education.${idx}.description`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Description</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"Bachelor's Degree (Hon.) in Computer Science\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <div className=\"flex justify-end gap-2 items-center mt-4\">\n                {idx === eduFieldArr.fields.length - 1 && (\n                  <Button\n                    size={\"sm\"}\n                    variant={\"outline\"}\n                    onClick={() =>\n                      eduFieldArr.append({\n                        school: \"\",\n                        dates: \"\",\n                        description: \"\",\n                      })\n                    }\n                  >\n                    <CirclePlusIcon className=\"w-4 h-4 mr-2\" /> Add Education\n                  </Button>\n                )}\n                <Button\n                  variant={\"destructive\"}\n                  size={\"sm\"}\n                  className=\"self-end\"\n                  onClick={() => eduFieldArr.remove(idx)}\n                >\n                  <Trash2Icon className=\"w-4 h-4 mr-2\" />\n                  Remove\n                </Button>\n              </div>\n            </Card>\n          ))}\n        </ScrollArea>\n      </form>\n    </Form>\n  );\n}\n\nexport default EducationForm;\n```\n";
						const data = {title:"Object List Input",description:"Create an object list input using Shadcn/ui form components.",editUrl:true,head:[],template:"doc",sidebar:{hidden:false,attrs:{}},pagefind:true,draft:false};
						const _internal = {
							type: 'content',
							filePath: "/Users/pbthang/pbthang-components/src/content/docs/components/shadcn/obj-list-input.mdx",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
