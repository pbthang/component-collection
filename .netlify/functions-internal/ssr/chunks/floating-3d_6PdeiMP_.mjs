const id = "components/hero/floating-3d.mdx";
						const collection = "docs";
						const slug = "components/hero/floating-3d";
						const body = "\nCreate floating 3D objects using HTML, TailwindCSS and Three.js.\n\nimport { Steps, Code } from \"@astrojs/starlight/components\";\n\n## Demo\n\nimport Floating3D from \"../../../../components/hero/Floating3D.astro\";\nimport fullCode from \"../../../../components/hero/Floating3D.astro?raw\";\n\n<Floating3D />\n\n<Code\n  code={fullCode}\n  lang=\"html\"\n  title=\"index.html\"\n  showLineNumbers\n  collapse={[\"7-16\"]}\n/>\n\n## Prerequisites\n\n[Three.js](https://threejs.org/) is required to use the code snippet above.\n\n## Steps\n\n<Steps>\n\n1. Inside the root `div`, create a `canvas` element for the 3d objects and a\n   `div` element for the content:\n\n   ```html showLineNumbers=false collapse={12-20}\n   <div class=\"h-96 relative rounded\">\n     <!-- Floating 3D Object -->\n     <canvas\n       id=\"hero-bg\"\n       class=\"!w-full !h-full rounded absolute top-0 left-0 z-0\"\n     ></canvas>\n\n     <!-- Content -->\n     <div\n       class=\"w-full h-full relative top-0 right-0 text-right flex flex-col items-end justify-center px-8 py-10 font-mono text-white\"\n     >\n       <h1 class=\"!text-white\">Lorem Ipsum Dolor</h1>\n       <p class=\"max-w-96\">\n         Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n       </p>\n       <button\n         class=\"bg-transparent border border-white text-white px-4 py-2 mt-4 rounded flex items-center gap-2 hover:bg-white hover:text-gray-900 cursor-pointer\"\n       >\n         Learn More â†’\n       </button>\n     </div>\n   </div>\n   ```\n\n2. Create a script for the HTML and set up the scene, camera, renderer, and environment using `three.js`:\n\n   ```ts title=\"main.ts\" showLineNumbers=false\n   import * as THREE from \"three\";\n   import { RoomEnvironment } from \"three/examples/jsm/Addons.js\";\n\n   const canvas = document.querySelector(\"#hero-bg\") as HTMLCanvasElement;\n   const scene = new THREE.Scene();\n   scene.background = new THREE.Color(0x1f2937);\n\n   const camera = new THREE.PerspectiveCamera(\n     75, // field of view\n     canvas.clientWidth / canvas.clientHeight, // aspect ratio\n     0.1, // near clipping plane\n     1000 // far clipping plane\n   );\n   camera.position.z = 6;\n\n   const renderer = new THREE.WebGLRenderer({\n     canvas,\n     antialias: true, // to smooth the edges\n   });\n\n   const pmremGenerator = new THREE.PMREMGenerator(renderer);\n   scene.environment = pmremGenerator.fromScene(\n     new RoomEnvironment(), // or any other environment\n     0.04\n   ).texture;\n   ```\n\n3. Create a mesh for the 3D object and render it on the scene:\n\n   ```ts title=\"main.ts\" showLineNumbers=false\n   const torus = new THREE.Mesh(\n     new THREE.TorusKnotGeometry(2, 0.7, 100, 16), // or any other geometry\n     new THREE.MeshPhysicalMaterial({\n       color: 0x00b377,\n       roughness: 0.2,\n       metalness: 1,\n       iridescence: 1,\n       iridescenceIOR: 1.31,\n     }) // or any other material\n   );\n   torus.position.set(-4, 0, 0);\n   scene.add(torus);\n\n   renderer.setPixelRatio(window.devicePixelRatio);\n   renderer.setSize(canvas.clientWidth, canvas.clientHeight);\n\n   renderer.render(scene, camera); // render the scene\n   ```\n\n4. Add an animation loop to rotate the 3D object:\n\n   ```ts title=\"main.ts\" showLineNumbers=false\n   function animate() {\n     requestAnimationFrame(animate);\n     // Rotate the torus\n     torus.rotation.y += 0.004;\n     torus.rotation.z += 0.004;\n     renderer.render(scene, camera);\n   }\n\n   animate();\n   ```\n\n5. You should now have a beautiful floating 3D object in your hero section. Feel free to customize the Mesh, Material and animation to suit your design.\n\n</Steps>\n";
						const data = {title:"Floating 3D Objects",description:"Create floating 3D objects using HTML, TailwindCSS and Three.js.",editUrl:true,head:[],template:"doc",sidebar:{hidden:false,attrs:{}},pagefind:true,draft:false};
						const _internal = {
							type: 'content',
							filePath: "/Users/pbthang/pbthang-components/src/content/docs/components/hero/floating-3d.mdx",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
